
service: chinchilla-runner
frameworkVersion: '2'

provider:
  name: aws
  runtime: python3.8
  environment:
    ENV: ${self:provider.stage}
  ecr:
      images:
        chinchilla-runner:
          path: ./
  stage: dev
  region: us-east-1
  tags:
    chinchilla-service-name: chinchilla-runner
    chinchilla-service-env: ${self:provider.stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
        - "ec2:*"
        - "sns:*"
        - "ssm:*"
        - "rds:*"
        - "dynamodb:*"
        - "tag:*"
      Resource: 
        - '*'
# functions:
#   run:
#     image: 
#       name: chinchilla-runner
#     environment:
#       MOTHERSHIP_URL: chaoscollector.ngrok.io
    # events:
    #   - sqs:
    #       arn:
    #         Fn::GetAtt:
    #           - ExecutionQueue
    #           - Arn
    #   - sns:
    #       topicName: nu-chaos-${self:provider.stage}-agent-trigger
    #       displayName: Triggers executions on the agent
    #   - stream:
    #       type: dynamodb
    #       arn:
    #         Fn::GetAtt:
    #           - ExecutionQueueTable
    #           - StreamArn
    #       batchSize: 1
    #       startingPosition: LATEST
    #       enabled: True
# resources:
#   Resources:
#     ExecutionQueue:
#         Type: "AWS::SQS::Topic"
#         Properties:
#           TopicName: chinchilla-cv-${self:provider.stage}-agent-trigger
    # ExecutionQueueTable:
    #     Type: AWS::DynamoDB::Table
    #     Properties:
    #       TableName: nu-chaos-${self:provider.stage}-execution-queue
    #       BillingMode: PAY_PER_REQUEST
    #       TimeToLiveSpecification:
    #         AttributeName: trigger_ts
    #         Enabled: true
    #       StreamSpecification:
    #         StreamViewType: NEW_IMAGE
    #       AttributeDefinitions:
    #         - AttributeName: execution_id
    #           AttributeType: N
    #       KeySchema:
    #         - AttributeName: execution_id
    #           KeyType: HASH